# - *- coding: utf- 8 - *-
import asyncio
import json

import requests
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery
from main import lang
from filters import IsAdmin
from keyboards.default import payment_default
from keyboards.inline import choice_way_input_payment_func
from loader import dp, bot
from utils import send_all_admin, clear_firstname
from utils.db_api.sqlite import get_paymentx, update_paymentx


###################################################################################
########################### –í–ö–õ–Æ–ß–ï–ù–ò–ï/–í–´–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û–ü–û–õ–ù–ï–ù–ò–Ø #######################
# –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.message_handler(IsAdmin(), text=["üî¥ Disable deposits","üî¥ –í—ã–∫–ª—é—á–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"], state="*")
async def turn_off_refill(message: types.Message, state: FSMContext):
    await state.finish()
    if lang(message.from_user.id)=='Eng':
        update_paymentx(status="False")
        await message.answer("<b>üî¥ Deposits in the bot were turned off.</b>",
                            reply_markup=payment_default(message.from_user.id))
        await send_all_admin(
            f"üë§ Administrator <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>\n"
            "üî¥ Turned off deposits in the bot.", not_me=message.from_user.id)
    else:
        update_paymentx(status="False")
        await message.answer("<b>üî¥ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ –±—ã–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã.</b>",
                            reply_markup=payment_default(message.from_user.id))
        await send_all_admin(
            f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>\n"
            "üî¥ –í—ã–∫–ª—é—á–∏–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ.", not_me=message.from_user.id)

# –í—ã–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.message_handler(IsAdmin(), text=["üü¢ Enable deposits","üü¢ –í–∫–ª—é—á–∏—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"], state="*")
async def turn_on_refill(message: types.Message, state: FSMContext):
    await state.finish()
    if lang(message.from_user.id)=='Eng':
        update_paymentx(status="True")
        await message.answer("<b>üü¢ Deposits in the bot have been enabled.</b>",
                            reply_markup=payment_default(message.from_user.id))
        await send_all_admin(
            f"üë§ Administrator <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>\n"
            "üü¢ Enabled deposits in the bot.", not_me=message.from_user.id)
    else:
        update_paymentx(status="True")
        await message.answer("<b>üü¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ –±—ã–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã.</b>",
                            reply_markup=payment_default(message.from_user.id))
        await send_all_admin(
            f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä <a href='tg://user?id={message.from_user.id}'>{clear_firstname(message.from_user.first_name)}</a>\n"
            "üü¢ –í–∫–ª—é—á–∏–ª –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –±–æ—Ç–µ.", not_me=message.from_user.id)

###################################################################################
############################# –í–´–ë–û–† –°–ü–û–°–û–ë–ê –ü–û–ü–û–õ–ù–ï–ù–ò–Ø ############################
# –í—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
@dp.callback_query_handler(IsAdmin(), text_startswith="change_payment:")
async def input_amount(call: CallbackQuery):
    way_pay = call.data[15:]
    change_pass = False
    get_payment = get_paymentx()
    if way_pay == "nickname":
        try:
            request = requests.Session()
            request.headers["authorization"] = "Bearer " + get_payment[1]
            get_nickname = request.get(f"https://edge.qiwi.com/qw-nicknames/v1/persons/{get_payment[0]}/nickname")
            check_nickname = json.loads(get_nickname.text).get("nickname")
            if check_nickname is None:
                await call.answer("‚ùó There is no QIWI Nickname on the account")
            else:
                update_paymentx(qiwi_nickname=check_nickname)
                change_pass = True
        except json.decoder.JSONDecodeError:
            await call.answer("‚ùó QIWI wallet is not working.\n‚ùó Install it as soon as possible", True)
    else:
        change_pass = True
    if change_pass:
        update_paymentx(way_payment=way_pay)
        if lang(call.from_user.id)=='Eng':
            await bot.edit_message_text("ü•ù Choose a deposit method üíµ\n"
                                        "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                                        "üî∏ <b>Form</b> - <code>Ready-made form of payment QIWI</code>\n"
                                        "üî∏ <b>Number</b> - <code>Transfer of funds by phone number</code>\n"
                                        "üî∏ <b>Nickname</b> - "
                                        "<code>Transfer of funds by nickname (users will have to manually enter a comment)</code>",
                                        call.from_user.id,
                                        call.message.message_id,
                                        reply_markup=choice_way_input_payment_func(call.from_user.id))
        else:
            await bot.edit_message_text("ü•ù –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è üíµ\n"
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
            "üî∏ <b>–ü–æ —Ñ–æ—Ä–º–µ</b> - <code>–ì–æ—Ç–æ–≤–∞—è —Ñ–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã QIWI</code>\n"
            "üî∏ <b>–ü–æ –Ω–æ–º–µ—Ä—É</b> - <code>–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞</code>\n"
            "üî∏ <b>–ü–æ –Ω–∏–∫–Ω–µ–π–º—É</b> - "
            "<code>–ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏–¥—ë—Ç—Å—è –≤—Ä—É—á–Ω—É—é –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π)</code>",
            call.from_user.id,
            call.message.message_id,
            reply_markup=choice_way_input_payment_func(call.from_user.id))

